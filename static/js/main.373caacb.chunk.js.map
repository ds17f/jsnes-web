{"version":3,"sources":["config.js","RomLibrary.js","ListPage.js","ControlMapperRow.js","ControlsModal.js","FrameTimer.js","GamepadController.js","KeyboardController.js","Screen.js","utils.js","Speakers.js","Emulator.js","RunPage.js","App.js","index.js"],"names":["config","ROMS","owlia","name","description","href","target","rel","url","nomolos","croom","lj65","GOOGLE_ANALYTICS_CODE","process","REACT_APP_GOOGLE_ANALYTICS_CODE","SENTRY_URI","REACT_APP_SENTRY_URI","BASENAME","RomLibrary","getRomInfoByHash","hash","this","load","find","rom","save","file","Promise","resolve","reject","reader","FileReader","onload","readAsBinaryString","pFileReader","then","readFile","byteString","result","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","crypto","subtle","digest","buffer","Array","from","map","b","toString","padStart","join","hashFile","savedRomInfo","localStorage","getItem","existingLibrary","JSON","parse","added","Date","now","newRomInfo","stringify","concat","setItem","delete","removeItem","filter","ListPage","props","deleteRom","updateLibrary","setState","romLibrary","handleDragOver","e","preventDefault","dataTransfer","dropEffect","handleDrop","items","getAsFile","files","history","push","pathname","state","className","onDragOver","onDrop","ListGroup","Object","keys","sort","key","to","rootRunPath","encodeURIComponent","a","onClick","title","Component","ControlMapperRow","playerOneButton","playerTwoButton","waitingForKey","handleClick","bind","button","playerButtons","console","log","prevProps","prevState","gamepadButton","newButton","searchButton","gamepadConfig","buttonId","buttons","searchNewButton","prevGamepadConfig","some","b2","waitingForKeyPlayer","gamepadButtonName","type","code","value","playerGamepadId","configs","prevButton","newState","currentPromptButton","player","buttonName","GAMEPAD_ICON","ControlsModal","undefined","modified","handleKeyDown","handleGamepadButtonDown","listenForKey","controllerIcon","gamepadId","controllerIconAlt","setKeys","setGamepadConfig","removeKeyListener","promptButton","document","addEventListener","buttonInfo","playerId","slice","newConfig","assign","event","newKeys","keyCode","String","toUpperCase","removeEventListener","Modal","isOpen","toggle","ModalHeader","ModalBody","Table","src","alt","Controller","BUTTON_LEFT","BUTTON_SELECT","BUTTON_RIGHT","BUTTON_UP","BUTTON_DOWN","BUTTON_A","BUTTON_B","BUTTON_START","ModalFooter","Button","outline","color","FrameTimer","onAnimationFrame","time","requestAnimationFrame","excess","interval","newFrameTime","lastFrameTime","numFrames","Math","round","generateFrame","onWriteFrame","timeToNextFrame","setTimeout","onGenerateFrame","running","_requestID","window","cancelAnimationFrame","GamepadController","options","disableIfGamepadEnabled","callback","self","_getPlayerNumberFromGamepad","gamepad","id","poll","gamepads","navigator","getGamepads","webkitGetGamepads","usedPlayers","gamepadIndex","previousGamepad","gamepadState","previousButtons","buttonCallback","axes","axis","previousAxis","previousButton","pressed","playerNumber","indexOf","configButtons","configButton","onButtonDown","onButtonUp","f","loadGamepadConfig","startPolling","stop","stopped","loop","KEYS","88","89","90","17","13","38","40","37","39","103","105","99","97","104","98","100","102","KeyboardController","loadKeys","handleKeyUp","handleKeyPress","Screen","setBuffer","y","x","buf32","writeBuffer","imageData","data","set","buf8","context","putImageData","fitInParent","parent","canvas","parentNode","parentWidth","clientWidth","parentHeight","clientHeight","style","width","height","handleMouseDown","onMouseDown","scale","parseFloat","rect","getBoundingClientRect","clientX","left","clientY","top","onMouseUp","ref","initCanvas","getContext","getImageData","fillStyle","fillRect","buf","Uint8ClampedArray","Uint32Array","img","Image","toDataURL","handleError","error","errorInfo","Raven","captureException","extra","Speakers","onBufferUnderrun","writeSample","right","size","bufferSize","deqN","enq","onaudioprocess","outputBuffer","getChannelData","samples","j","RingBuffer","AudioContext","myCtx","sampleRate","close","audioCtx","scriptNode","createScriptProcessor","connect","destination","disconnect","catch","Emulator","start","frameTimer","speakers","fpsInterval","setInterval","nes","getFPS","clearInterval","screen","frame","zapperMove","zapperFireDown","zapperFireUp","actualSize","desiredSize","paused","NES","onFrame","onStatusUpdate","onAudioSample","getSampleRate","wrap","gamepadController","buttonDown","buttonUp","gamepadPolling","keyboardController","loadROM","romData","RunPage","match","params","slug","isLocalROM","test","romHash","split","romInfo","romName","localROMData","handleLoaded","currentRequest","path","handleProgress","req","XMLHttpRequest","open","overrideMimeType","status","responseText","Error","statusText","onerror","onprogress","send","loadBinary","err","message","location","lengthComputable","loadedPercent","loaded","total","loading","handlePauseResume","layout","navbarHeight","getComputedStyle","navbar","screenContainer","innerHeight","emulator","toggleControlsModal","controlsModalOpen","el","disabled","Progress","position","abort","App","recordPageview","GoogleAnalytics","pageview","initialize","basename","exact","component","render","install","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.373caacb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst config = {\n  ROMS: {\n    owlia: {\n      name: \"The Legends of Owlia\",\n      description: (\n        <span>\n          <a\n            href=\"http://www.gradualgames.com/p/the-legends-of-owlia_1.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Owlia by Gradual Games\n          </a>{\" \"}\n          /{\" \"}\n          <a\n            href=\"http://www.infiniteneslives.com/owlia.php\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Buy the cartridge\n          </a>\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/owlia.nes\"\n    },\n    nomolos: {\n      name: \"Nomolos: Storming the Catsle\",\n      description: (\n        <span>\n          <a\n            href=\"http://www.gradualgames.com/p/nomolos-storming-catsle.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Monolos by Gradual Games\n          </a>{\" \"}\n          /{\" \"}\n          <a\n            href=\"http://www.infiniteneslives.com/nomolos.php\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Buy the cartridge\n          </a>\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/nomolos.nes\"\n    },\n    croom: {\n      name: \"Concentration Room\",\n      description: (\n        <span>\n          <a\n            href=\"http://www.pineight.com/croom/README\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Concentration Room\n          </a>{\" \"}\n          by Damian Yerrick\n        </span>\n      ),\n      url:\n        \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/croom/croom.nes\"\n    },\n    lj65: {\n      name: \"LJ65\",\n      description: (\n        <span>\n          <a\n            href=\"http://harddrop.com/wiki/LJ65\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Concentration Room\n          </a>{\" \"}\n          by Damian Yerrick\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/lj65/lj65.nes\"\n    }\n  },\n  GOOGLE_ANALYTICS_CODE: process.env.REACT_APP_GOOGLE_ANALYTICS_CODE,\n  SENTRY_URI: process.env.REACT_APP_SENTRY_URI,\n  BASENAME: \"/jsnes-web\"\n};\n\nexport default config;\n","const pFileReader = function(file) {\n  return new Promise((resolve, reject) => {\n    var reader = new FileReader();\n    reader.onload = resolve;\n    reader.readAsBinaryString(file);\n  });\n};\n\nconst hashFile = function(byteString) {\n  const asHex = buffer => {\n    return Array.from(new Uint8Array(buffer))\n      .map(b => b.toString(16).padStart(2, \"0\"))\n      .join(\"\");\n  };\n\n  const ab = new ArrayBuffer(byteString.length);\n  var ia = new Uint8Array(ab);\n\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  return crypto.subtle.digest(\"SHA-1\", ab).then(asHex);\n};\n\nconst RomLibrary = {\n  getRomInfoByHash: function(hash) {\n    return this.load().find(rom => rom.hash === hash);\n  },\n  save: function(file) {\n    return pFileReader(file)\n      .then(function(readFile) {\n        const byteString = readFile.target.result;\n        return hashFile(byteString).then(hash => {\n          return { hash, byteString };\n        });\n      })\n      .then(({ hash, byteString }) => {\n        const savedRomInfo = localStorage.getItem(\"savedRomInfo\");\n        const existingLibrary = savedRomInfo ? JSON.parse(savedRomInfo) : [];\n\n        const rom = {\n          name: file.name,\n          hash: hash,\n          added: Date.now()\n        };\n\n        const newRomInfo = JSON.stringify(existingLibrary.concat([rom]));\n\n        localStorage.setItem(\"savedRomInfo\", newRomInfo);\n        localStorage.setItem(\"blob-\" + hash, byteString);\n\n        return rom;\n      });\n  },\n  load: function() {\n    const localData = localStorage.getItem(\"savedRomInfo\");\n    if (!localData) return [];\n    const savedRomInfo = JSON.parse(localStorage.getItem(\"savedRomInfo\"));\n    return savedRomInfo || [];\n  },\n  delete: function(hash) {\n    const existingLibrary = this.load();\n    localStorage.removeItem(\"blob-\" + hash);\n    localStorage.setItem(\n      \"savedRomInfo\",\n      JSON.stringify(existingLibrary.filter(rom => rom.hash !== hash))\n    );\n  }\n};\n\nexport default RomLibrary;\n","import React, { Component } from \"react\";\nimport \"./ListPage.css\";\nimport { ListGroup } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport config from \"./config\";\n\nimport RomLibrary from \"./RomLibrary\";\n\n// const rootRunPath = `${config.BASENAME}/run`;\nconst rootRunPath = `/run`;\nconst rootRunPathLocal = `/local-`;\n\nclass ListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      romLibrary: RomLibrary.load()\n    };\n  }\n  render() {\n    return (\n      <div\n        className=\"drop-zone\"\n        onDragOver={this.handleDragOver}\n        onDrop={this.handleDrop}\n      >\n        <div className=\"container ListPage py-4\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              <header className=\"mb-4\">\n                <h1 className=\"mb-3\">JSNES</h1>\n                <p>\n                  A JavaScript NES emulator.{\" \"}\n                  <a href=\"https://github.com/bfirsh/jsnes\">\n                    Source on GitHub.\n                  </a>\n                </p>\n              </header>\n\n              <ListGroup className=\"mb-4\">\n                {Object.keys(config.ROMS)\n                  .sort()\n                  .map(key => (\n                    <Link\n                      key={key}\n                      to={rootRunPath + \"/\" +  encodeURIComponent(key)}\n                      className=\"list-group-item\"\n                    >\n                      {config.ROMS[key][\"name\"]}\n                      <span className=\"float-right\">&rsaquo;</span>\n                    </Link>\n                  ))}\n              </ListGroup>\n\n              <p>\n                Or, drag and drop a ROM file onto the page to play it. (Google\n                may help you find them.)\n              </p>\n\n              {this.state.romLibrary.length > 0 ? (\n                <div>\n                  <p>Previously played:</p>\n\n                  <ListGroup className=\"mb-4\">\n                    {this.state.romLibrary\n                      .sort((a, b) => new Date(b.added) - new Date(a.added))\n                      .map(rom => (\n                        <Link\n                          key={rom.hash}\n                          to={rootRunPathLocal + rom.hash}\n                          className=\"list-group-item\"\n                        >\n                          {rom.name}\n                          <span\n                            onClick={e => {\n                              e.preventDefault();\n                              this.deleteRom(rom.hash);\n                            }}\n                            className=\"delete\"\n                            title=\"Delete\"\n                          >\n                            &times;\n                          </span>\n                          <span className=\"float-right\">&rsaquo;</span>\n                        </Link>\n                      ))}\n                  </ListGroup>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  deleteRom = hash => {\n    RomLibrary.delete(hash);\n    this.updateLibrary();\n  };\n\n  updateLibrary = () => {\n    this.setState({ romLibrary: RomLibrary.load() });\n  };\n\n  handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"copy\";\n  };\n\n  handleDrop = e => {\n    e.preventDefault();\n\n    const file = e.dataTransfer.items\n      ? e.dataTransfer.items[0].getAsFile()\n      : e.dataTransfer.files[0];\n\n    RomLibrary.save(file).then(rom => {\n      this.updateLibrary();\n      this.props.history.push({ pathname:  + rom.hash });\n    });\n  };\n}\n\nexport default ListPage;\n","import React, { Component } from \"react\";\n\nclass ControlMapperRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerOneButton: \"\",\n      playerTwoButton: \"\",\n      waitingForKey: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    var keys = this.props.keys;\n    var button = this.props.button;\n    var playerButtons = [];\n    for (var key in keys) {\n      if (keys[key][0] === 1 && keys[key][1] === button) {\n        playerButtons[0] = keys[key][2];\n        console.log(playerButtons[0]);\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\n        playerButtons[1] = keys[key][2];\n      }\n    }\n    this.setState({\n      playerOneButton: playerButtons[0],\n      playerTwoButton: playerButtons[1]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    var keys = this.props.keys;\n    var button = this.props.button;\n    var playerButtons = [];\n    var gamepadButton;\n    var newButton;\n\n    for (var key in keys) {\n      if (keys[key][0] === 1 && keys[key][1] === button) {\n        playerButtons[0] = keys[key][2];\n        console.log(playerButtons[0]);\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\n        playerButtons[1] = keys[key][2];\n      }\n    }\n\n    var searchButton = (gamepadConfig, buttonId) => {\n      return gamepadConfig.buttons.filter(b => b.buttonId === buttonId)[0];\n    };\n\n    var searchNewButton = (prevGamepadConfig, gamepadConfig) => {\n      return gamepadConfig.buttons.filter(b => {\n        return (\n          !prevGamepadConfig ||\n          !prevGamepadConfig.buttons.some(b2 => b2.buttonId === b.buttonId)\n        );\n      })[0];\n    };\n\n    var waitingForKey = 0;\n    var waitingForKeyPlayer = 0;\n\n    var gamepadButtonName = gamepadButton => {\n      if (gamepadButton.type === \"button\") return \"Btn-\" + gamepadButton.code;\n      if (gamepadButton.type === \"axis\")\n        return \"Axis-\" + gamepadButton.code + \" \" + gamepadButton.value;\n    };\n\n    if (this.props.gamepadConfig && this.props.gamepadConfig.playerGamepadId) {\n      const playerGamepadId = this.props.gamepadConfig.playerGamepadId;\n      if (playerGamepadId[0]) {\n        playerButtons[0] = \"\";\n        gamepadButton = searchButton(\n          this.props.gamepadConfig.configs[playerGamepadId[0]],\n          button\n        );\n        newButton = searchNewButton(\n          prevProps.gamepadConfig.configs[playerGamepadId[0]],\n          this.props.gamepadConfig.configs[playerGamepadId[0]]\n        );\n        if (gamepadButton) {\n          playerButtons[0] = gamepadButtonName(gamepadButton);\n        } else {\n          if (newButton && newButton.buttonId === this.props.prevButton) {\n            if (!waitingForKey) {\n              waitingForKey = 1;\n              waitingForKeyPlayer = 1;\n            }\n          }\n        }\n      }\n\n      if (playerGamepadId[1]) {\n        playerButtons[1] = \"\";\n        gamepadButton = searchButton(\n          this.props.gamepadConfig.configs[playerGamepadId[1]],\n          button\n        );\n        newButton = searchNewButton(\n          prevProps.gamepadConfig.configs[playerGamepadId[1]],\n          this.props.gamepadConfig.configs[playerGamepadId[1]]\n        );\n        if (gamepadButton) {\n          playerButtons[1] = gamepadButtonName(gamepadButton);\n        } else {\n          if (newButton && newButton.buttonId === this.props.prevButton) {\n            if (!waitingForKey) {\n              waitingForKey = 2;\n              waitingForKeyPlayer = 2;\n            }\n          }\n        }\n      }\n    }\n\n    var newState = {};\n\n    if (waitingForKey) {\n      this.props.handleClick([waitingForKeyPlayer, this.props.button]);\n    }\n    // Prevent setState being called repeatedly\n    if (\n      prevState.playerOneButton !== playerButtons[0] ||\n      prevState.playerTwoButton !== playerButtons[1]\n    ) {\n      newState.playerOneButton = playerButtons[0];\n      newState.playerTwoButton = playerButtons[1];\n    }\n\n    if (waitingForKey) {\n      newState.waitingForKey = waitingForKey;\n    } else if (prevState.waitingForKey === 1) {\n      if (this.props.currentPromptButton !== this.props.button) {\n        newState.waitingForKey = 0;\n      }\n    } else if (prevState.waitingForKey === 2) {\n      if (this.props.currentPromptButton !== this.props.button) {\n        newState.waitingForKey = 0;\n      }\n    }\n\n    if (Object.keys(newState).length > 0) {\n      this.setState(newState);\n    }\n  }\n\n  handleClick(player) {\n    this.props.handleClick([player, this.props.button]);\n    this.setState({\n      waitingForKey: player\n    });\n  }\n\n  render() {\n    const waitingText = \"Press key or button...\";\n    return (\n      <tr>\n        <td>{this.props.buttonName}</td>\n        <td onClick={() => this.handleClick(1)}>\n          {this.state.waitingForKey === 1\n            ? waitingText\n            : this.state.playerOneButton}\n        </td>\n        <td onClick={() => this.handleClick(2)}>\n          {this.state.waitingForKey === 2\n            ? waitingText\n            : this.state.playerTwoButton}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ControlMapperRow;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from \"reactstrap\";\nimport { Controller } from \"jsnes\";\nimport ControlMapperRow from \"./ControlMapperRow\";\n\nconst GAMEPAD_ICON = \"../img/nes_controller.png\";\nconst KEYBOARD_ICON = \"../img/keyboard.png\";\n\nclass ControlsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gamepadConfig: props.gamepadConfig,\n      keys: props.keys,\n      button: undefined,\n      modified: false\n    };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleGamepadButtonDown = this.handleGamepadButtonDown.bind(this);\n    this.listenForKey = this.listenForKey.bind(this);\n\n    this.state.gamepadConfig = this.state.gamepadConfig || {};\n    this.state.gamepadConfig.playerGamepadId = this.state.gamepadConfig\n      .playerGamepadId || [null, null];\n    this.state.gamepadConfig.configs = this.state.gamepadConfig.configs || {};\n\n    this.state.controllerIcon = this.state.gamepadConfig.playerGamepadId.map(\n      gamepadId => (gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON)\n    );\n    this.state.controllerIconAlt = this.state.gamepadConfig.playerGamepadId.map(\n      gamepadId => (gamepadId ? \"gamepad\" : \"keyboard\")\n    );\n    this.state.currentPromptButton = -1;\n  }\n\n  componentWillUnmount() {\n    if (this.state.modified) {\n      this.props.setKeys(this.state.keys);\n      this.props.setGamepadConfig(this.state.gamepadConfig);\n    }\n    this.removeKeyListener();\n  }\n\n  listenForKey(button) {\n    var currentPromptButton = button[1];\n\n    this.removeKeyListener();\n    this.setState({ button, currentPromptButton });\n    this.props.promptButton(this.handleGamepadButtonDown);\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleGamepadButtonDown(buttonInfo) {\n    this.removeKeyListener();\n\n    var button = this.state.button;\n\n    const playerId = button[0];\n    const buttonId = button[1];\n\n    const gamepadId = buttonInfo.gamepadId;\n    const gamepadConfig = this.state.gamepadConfig;\n\n    // link player to gamepad\n    const playerGamepadId = gamepadConfig.playerGamepadId.slice(0);\n    const newConfig = {};\n\n    playerGamepadId[playerId - 1] = gamepadId;\n\n    const rejectButtonId = b => {\n      return b.buttonId !== buttonId;\n    };\n\n    const newButton = {\n      code: buttonInfo.code,\n      type: buttonInfo.type,\n      buttonId: buttonId,\n      value: buttonInfo.value\n    };\n    newConfig[gamepadId] = {\n      buttons: (gamepadConfig.configs[gamepadId] || { buttons: [] }).buttons\n        .filter(rejectButtonId)\n        .concat([newButton])\n    };\n\n    const configs = Object.assign({}, gamepadConfig.configs, newConfig);\n\n    this.setState({\n      gamepadConfig: {\n        configs: configs,\n        playerGamepadId: playerGamepadId\n      },\n      currentPromptButton: -1,\n      controllerIcon: playerGamepadId.map(gamepadId =>\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\n      ),\n      modified: true\n    });\n  }\n\n  handleKeyDown(event) {\n    this.removeKeyListener();\n\n    var button = this.state.button;\n    var keys = this.state.keys;\n    var newKeys = {};\n    for (var key in keys) {\n      if (keys[key][0] !== button[0] || keys[key][1] !== button[1]) {\n        newKeys[key] = keys[key];\n      }\n    }\n\n    const playerGamepadId = this.state.gamepadConfig.playerGamepadId.slice(0);\n    const playerId = button[0];\n    playerGamepadId[playerId - 1] = null;\n\n    this.setState({\n      keys: {\n        ...newKeys,\n        [event.keyCode]: [\n          ...button.slice(0, 2),\n          event.key.length > 1 ? event.key : String(event.key).toUpperCase()\n        ]\n      },\n      button: undefined,\n      gamepadConfig: {\n        configs: this.state.gamepadConfig.configs,\n        playerGamepadId: playerGamepadId\n      },\n      currentPromptButton: -1,\n      controllerIcon: playerGamepadId.map(gamepadId =>\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\n      ),\n      controllerIconAlt: playerGamepadId.map(gamepadId =>\n        gamepadId ? \"gamepad\" : \"keyboard\"\n      ),\n      modified: true\n    });\n  }\n\n  removeKeyListener() {\n    this.props.promptButton(null);\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={this.props.toggle}\n        className=\"ControlsModal\"\n      >\n        <ModalHeader toggle={this.props.toggle}>Controls</ModalHeader>\n        <ModalBody>\n          <Table>\n            <thead>\n              <tr>\n                <th>Button</th>\n                <th>\n                  Player 1\n                  <img\n                    className=\"controller-icon\"\n                    src={this.state.controllerIcon[0]}\n                    alt={this.state.controllerIconAlt[0]}\n                  />\n                </th>\n                <th>\n                  Player 2\n                  <img\n                    className=\"controller-icon\"\n                    src={this.state.controllerIcon[1]}\n                    alt={this.state.controllerIconAlt[1]}\n                  />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <ControlMapperRow\n                buttonName=\"Left\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_LEFT}\n                prevButton={Controller.BUTTON_SELECT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Right\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_RIGHT}\n                prevButton={Controller.BUTTON_LEFT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Up\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_UP}\n                prevButton={Controller.BUTTON_RIGHT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Down\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_DOWN}\n                prevButton={Controller.BUTTON_UP}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"A\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_A}\n                prevButton={Controller.BUTTON_DOWN}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"B\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_B}\n                prevButton={Controller.BUTTON_A}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Start\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_START}\n                prevButton={Controller.BUTTON_B}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Select\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_SELECT}\n                prevButton={Controller.BUTTON_START}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n            </tbody>\n          </Table>\n        </ModalBody>\n        <ModalFooter>\n          <Button outline color=\"primary\" onClick={this.props.toggle}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nexport default ControlsModal;\n","const FPS = 60.098;\n\nexport default class FrameTimer {\n  constructor(props) {\n    // Run at 60 FPS\n    this.onGenerateFrame = props.onGenerateFrame;\n    // Run on animation frame\n    this.onWriteFrame = props.onWriteFrame;\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n    this.running = true;\n    this.interval = 1e3 / FPS;\n    this.lastFrameTime = false;\n  }\n\n  start() {\n    this.running = true;\n    this.requestAnimationFrame();\n  }\n\n  stop() {\n    this.running = false;\n    if (this._requestID) window.cancelAnimationFrame(this._requestID);\n    this.lastFrameTime = false;\n  }\n\n  requestAnimationFrame() {\n    this._requestID = window.requestAnimationFrame(this.onAnimationFrame);\n  }\n\n  generateFrame() {\n    this.onGenerateFrame();\n    this.lastFrameTime += this.interval;\n  }\n\n  onAnimationFrame = time => {\n    this.requestAnimationFrame();\n    // how many ms after 60fps frame time\n    let excess = time % this.interval;\n\n    // newFrameTime is the current time aligned to 60fps intervals.\n    // i.e. 16.6, 33.3, etc ...\n    let newFrameTime = time - excess;\n\n    // first frame, do nothing\n    if (!this.lastFrameTime) {\n      this.lastFrameTime = newFrameTime;\n      return;\n    }\n\n    let numFrames = Math.round(\n      (newFrameTime - this.lastFrameTime) / this.interval\n    );\n\n    // This can happen a lot on a 144Hz display\n    if (numFrames === 0) {\n      //console.log(\"WOAH, no frames\");\n      return;\n    }\n\n    // update display on first frame only\n    this.generateFrame();\n    this.onWriteFrame();\n\n    // we generate additional frames evenly before the next\n    // onAnimationFrame call.\n    // additional frames are generated but not displayed\n    // until next frame draw\n    let timeToNextFrame = this.interval - excess;\n    for (let i = 1; i < numFrames; i++) {\n      setTimeout(() => {\n        this.generateFrame();\n      }, (i * timeToNextFrame) / numFrames);\n    }\n    if (numFrames > 1) console.log(\"SKIP\", numFrames - 1, this.lastFrameTime);\n  };\n}\n","export default class GamepadController {\n  constructor(options) {\n    this.onButtonDown = options.onButtonDown;\n    this.onButtonUp = options.onButtonUp;\n    this.gamepadState = [];\n    this.buttonCallback = null;\n  }\n\n  disableIfGamepadEnabled = callback => {\n    var self = this;\n    return (playerId, buttonId) => {\n      if (!self.gamepadConfig) {\n        return callback(playerId, buttonId);\n      }\n\n      var playerGamepadId = self.gamepadConfig.playerGamepadId;\n      if (!playerGamepadId || !playerGamepadId[playerId - 1]) {\n        // allow callback only if player is not associated to any gamepad\n        return callback(playerId, buttonId);\n      }\n    };\n  };\n\n  _getPlayerNumberFromGamepad = gamepad => {\n    if (this.gamepadConfig.playerGamepadId[0] === gamepad.id) {\n      return 1;\n    }\n\n    if (this.gamepadConfig.playerGamepadId[1] === gamepad.id) {\n      return 2;\n    }\n\n    return 1;\n  };\n\n  poll = () => {\n    const gamepads = navigator.getGamepads\n      ? navigator.getGamepads()\n      : navigator.webkitGetGamepads();\n\n    const usedPlayers = [];\n\n    for (let gamepadIndex = 0; gamepadIndex < gamepads.length; gamepadIndex++) {\n      const gamepad = gamepads[gamepadIndex];\n      const previousGamepad = this.gamepadState[gamepadIndex];\n\n      if (!gamepad) {\n        continue;\n      }\n\n      if (!previousGamepad) {\n        this.gamepadState[gamepadIndex] = gamepad;\n        continue;\n      }\n\n      const buttons = gamepad.buttons;\n      const previousButtons = previousGamepad.buttons;\n\n      if (this.buttonCallback) {\n        for (let code = 0; code < gamepad.axes.length; code++) {\n          const axis = gamepad.axes[code];\n          const previousAxis = previousGamepad.axes[code];\n\n          if (axis === -1 && previousAxis !== -1) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"axis\",\n              code: code,\n              value: axis\n            });\n          }\n\n          if (axis === 1 && previousAxis !== 1) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"axis\",\n              code: code,\n              value: axis\n            });\n          }\n        }\n\n        for (let code = 0; code < buttons.length; code++) {\n          const button = buttons[code];\n          const previousButton = previousButtons[code];\n          if (button.pressed && !previousButton.pressed) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"button\",\n              code: code\n            });\n          }\n        }\n      } else if (this.gamepadConfig) {\n        let playerNumber = this._getPlayerNumberFromGamepad(gamepad);\n        if (usedPlayers.length < 2) {\n          if (usedPlayers.indexOf(playerNumber) !== -1) {\n            playerNumber++;\n            if (playerNumber > 2) playerNumber = 1;\n          }\n          usedPlayers.push(playerNumber);\n\n          if (this.gamepadConfig.configs[gamepad.id]) {\n            const configButtons = this.gamepadConfig.configs[gamepad.id]\n              .buttons;\n\n            for (let i = 0; i < configButtons.length; i++) {\n              const configButton = configButtons[i];\n              if (configButton.type === \"button\") {\n                const code = configButton.code;\n                const button = buttons[code];\n                const previousButton = previousButtons[code];\n\n                if (button.pressed && !previousButton.pressed) {\n                  this.onButtonDown(playerNumber, configButton.buttonId);\n                } else if (!button.pressed && previousButton.pressed) {\n                  this.onButtonUp(playerNumber, configButton.buttonId);\n                }\n              } else if (configButton.type === \"axis\") {\n                const code = configButton.code;\n                const axis = gamepad.axes[code];\n                const previousAxis = previousGamepad.axes[code];\n\n                if (\n                  axis === configButton.value &&\n                  previousAxis !== configButton.value\n                ) {\n                  this.onButtonDown(playerNumber, configButton.buttonId);\n                }\n\n                if (\n                  axis !== configButton.value &&\n                  previousAxis === configButton.value\n                ) {\n                  this.onButtonUp(playerNumber, configButton.buttonId);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      this.gamepadState[gamepadIndex] = {\n        buttons: buttons.map(b => {\n          return { pressed: b.pressed };\n        }),\n        axes: gamepad.axes.slice(0)\n      };\n    }\n  };\n\n  promptButton = f => {\n    if (!f) {\n      this.buttonCallback = f;\n    } else {\n      this.buttonCallback = buttonInfo => {\n        this.buttonCallback = null;\n        f(buttonInfo);\n      };\n    }\n  };\n\n  loadGamepadConfig = () => {\n    var gamepadConfig;\n    try {\n      gamepadConfig = localStorage.getItem(\"gamepadConfig\");\n      if (gamepadConfig) {\n        gamepadConfig = JSON.parse(gamepadConfig);\n      }\n    } catch (e) {\n      console.log(\"Failed to get gamepadConfig from localStorage.\", e);\n    }\n\n    this.gamepadConfig = gamepadConfig;\n  };\n\n  setGamepadConfig = gamepadConfig => {\n    try {\n      localStorage.setItem(\"gamepadConfig\", JSON.stringify(gamepadConfig));\n      this.gamepadConfig = gamepadConfig;\n    } catch (e) {\n      console.log(\"Failed to set gamepadConfig in localStorage\");\n    }\n  };\n\n  startPolling = () => {\n    if (!(navigator.getGamepads || navigator.webkitGetGamepads)) {\n      return { stop: () => {} };\n    }\n\n    let stopped = false;\n    const loop = () => {\n      if (stopped) return;\n\n      this.poll();\n      requestAnimationFrame(loop);\n    };\n    requestAnimationFrame(loop);\n\n    return {\n      stop: () => {\n        stopped = true;\n      }\n    };\n  };\n}\n","import { Controller } from \"jsnes\";\n\n// Mapping keyboard code to [controller, button]\nconst KEYS = {\n  88: [1, Controller.BUTTON_A, \"X\"], // X\n  89: [1, Controller.BUTTON_B, \"Y\"], // Y (Central European keyboard)\n  90: [1, Controller.BUTTON_B, \"Z\"], // Z\n  17: [1, Controller.BUTTON_SELECT, \"Right Ctrl\"], // Right Ctrl\n  13: [1, Controller.BUTTON_START, \"Enter\"], // Enter\n  38: [1, Controller.BUTTON_UP, \"Up\"], // Up\n  40: [1, Controller.BUTTON_DOWN, \"Down\"], // Down\n  37: [1, Controller.BUTTON_LEFT, \"Left\"], // Left\n  39: [1, Controller.BUTTON_RIGHT, \"Right\"], // Right\n  103: [2, Controller.BUTTON_A, \"Num-7\"], // Num-7\n  105: [2, Controller.BUTTON_B, \"Num-9\"], // Num-9\n  99: [2, Controller.BUTTON_SELECT, \"Num-3\"], // Num-3\n  97: [2, Controller.BUTTON_START, \"Num-1\"], // Num-1\n  104: [2, Controller.BUTTON_UP, \"Num-8\"], // Num-8\n  98: [2, Controller.BUTTON_DOWN, \"Num-2\"], // Num-2\n  100: [2, Controller.BUTTON_LEFT, \"Num-4\"], // Num-4\n  102: [2, Controller.BUTTON_RIGHT, \"Num-6\"] // Num-6\n};\n\nexport default class KeyboardController {\n  constructor(options) {\n    this.onButtonDown = options.onButtonDown;\n    this.onButtonUp = options.onButtonUp;\n  }\n\n  loadKeys = () => {\n    var keys;\n    try {\n      keys = localStorage.getItem(\"keys\");\n      if (keys) {\n        keys = JSON.parse(keys);\n      }\n    } catch (e) {\n      console.log(\"Failed to get keys from localStorage.\", e);\n    }\n\n    this.keys = keys || KEYS;\n  };\n\n  setKeys = newKeys => {\n    try {\n      localStorage.setItem(\"keys\", JSON.stringify(newKeys));\n      this.keys = newKeys;\n    } catch (e) {\n      console.log(\"Failed to set keys in localStorage\");\n    }\n  };\n\n  handleKeyDown = e => {\n    var key = this.keys[e.keyCode];\n    if (key) {\n      this.onButtonDown(key[0], key[1]);\n      e.preventDefault();\n    }\n  };\n\n  handleKeyUp = e => {\n    var key = this.keys[e.keyCode];\n    if (key) {\n      this.onButtonUp(key[0], key[1]);\n      e.preventDefault();\n    }\n  };\n\n  handleKeyPress = e => {\n    e.preventDefault();\n  };\n}\n","import React, { Component } from \"react\";\nimport \"./Screen.css\";\n\nconst SCREEN_WIDTH = 256;\nconst SCREEN_HEIGHT = 240;\n\nclass Screen extends Component {\n  render() {\n    return (\n      <canvas\n        className=\"Screen\"\n        width={SCREEN_WIDTH}\n        height={SCREEN_HEIGHT}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.props.onMouseUp}\n        ref={canvas => {\n          this.canvas = canvas;\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n  }\n\n  componentDidUpdate() {\n    this.initCanvas();\n  }\n\n  initCanvas() {\n    this.context = this.canvas.getContext(\"2d\");\n    this.imageData = this.context.getImageData(\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT\n    );\n\n    this.context.fillStyle = \"black\";\n    // set alpha to opaque\n    this.context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n\n    // buffer to write on next animation frame\n    this.buf = new ArrayBuffer(this.imageData.data.length);\n    // Get the canvas buffer in 8bit and 32bit\n    this.buf8 = new Uint8ClampedArray(this.buf);\n    this.buf32 = new Uint32Array(this.buf);\n\n    // Set alpha\n    for (var i = 0; i < this.buf32.length; ++i) {\n      this.buf32[i] = 0xff000000;\n    }\n  }\n\n  setBuffer = buffer => {\n    var i = 0;\n    for (var y = 0; y < SCREEN_HEIGHT; ++y) {\n      for (var x = 0; x < SCREEN_WIDTH; ++x) {\n        i = y * 256 + x;\n        // Convert pixel from NES BGR to canvas ABGR\n        this.buf32[i] = 0xff000000 | buffer[i]; // Full alpha\n      }\n    }\n  };\n\n  writeBuffer = () => {\n    this.imageData.data.set(this.buf8);\n    this.context.putImageData(this.imageData, 0, 0);\n  };\n\n  fitInParent = () => {\n    let parent = this.canvas.parentNode;\n    // @ts-ignore\n    let parentWidth = parent.clientWidth;\n    // @ts-ignore\n    let parentHeight = parent.clientHeight;\n    let parentRatio = parentWidth / parentHeight;\n    let desiredRatio = SCREEN_WIDTH / SCREEN_HEIGHT;\n    if (desiredRatio < parentRatio) {\n      this.canvas.style.width = `${Math.round(parentHeight * desiredRatio)}px`;\n      this.canvas.style.height = `${parentHeight}px`;\n    } else {\n      this.canvas.style.width = `${parentWidth}px`;\n      this.canvas.style.height = `${Math.round(parentWidth / desiredRatio)}px`;\n    }\n  };\n\n  screenshot() {\n    var img = new Image();\n    img.src = this.canvas.toDataURL(\"image/png\");\n    return img;\n  }\n\n  handleMouseDown = e => {\n    if (!this.props.onMouseDown) return;\n    // Make coordinates unscaled\n    let scale = SCREEN_WIDTH / parseFloat(this.canvas.style.width);\n    let rect = this.canvas.getBoundingClientRect();\n    let x = Math.round((e.clientX - rect.left) * scale);\n    let y = Math.round((e.clientY - rect.top) * scale);\n    this.props.onMouseDown(x, y);\n  };\n}\n\nexport default Screen;\n","import Raven from \"raven-js\";\n\nexport const handleError = (error, errorInfo) => {\n  console.error(error);\n  Raven.captureException(error, { extra: errorInfo });\n};\n\nexport function loadBinary(path, callback, handleProgress) {\n  var req = new XMLHttpRequest();\n  req.open(\"GET\", path);\n  req.overrideMimeType(\"text/plain; charset=x-user-defined\");\n  req.onload = function() {\n    if (this.status === 200) {\n      if (req.responseText.match(/^<!doctype html>/i)) {\n        // Got HTML back, so it is probably falling back to index.html due to 404\n        return callback(new Error(\"Page not found\"));\n      }\n\n      callback(null, this.responseText);\n    } else if (this.status === 0) {\n      // Aborted, so ignore error\n    } else {\n      callback(new Error(req.statusText));\n    }\n  };\n  req.onerror = function() {\n    callback(new Error(req.statusText));\n  };\n  req.onprogress = handleProgress;\n  req.send();\n  return req;\n}\n","import RingBuffer from \"ringbufferjs\";\nimport { handleError } from \"./utils\";\n\nexport default class Speakers {\n  constructor({ onBufferUnderrun }) {\n    this.onBufferUnderrun = onBufferUnderrun;\n    this.bufferSize = 8192;\n    this.buffer = new RingBuffer(this.bufferSize * 2);\n  }\n\n  getSampleRate() {\n    if (!window.AudioContext) {\n      return 44100;\n    }\n    let myCtx = new window.AudioContext();\n    let sampleRate = myCtx.sampleRate;\n    myCtx.close();\n    return sampleRate;\n  }\n\n  start() {\n    // Audio is not supported\n    if (!window.AudioContext) {\n      return;\n    }\n    this.audioCtx = new window.AudioContext();\n    this.scriptNode = this.audioCtx.createScriptProcessor(1024, 0, 2);\n    this.scriptNode.onaudioprocess = this.onaudioprocess;\n    this.scriptNode.connect(this.audioCtx.destination);\n  }\n\n  stop() {\n    if (this.scriptNode) {\n      this.scriptNode.disconnect(this.audioCtx.destination);\n      this.scriptNode.onaudioprocess = null;\n      this.scriptNode = null;\n    }\n    if (this.audioCtx) {\n      this.audioCtx.close().catch(handleError);\n      this.audioCtx = null;\n    }\n  }\n\n  writeSample = (left, right) => {\n    if (this.buffer.size() / 2 >= this.bufferSize) {\n      console.log(`Buffer overrun`);\n      this.buffer.deqN(this.bufferSize / 2);\n    }\n    this.buffer.enq(left);\n    this.buffer.enq(right);\n  };\n\n  onaudioprocess = e => {\n    var left = e.outputBuffer.getChannelData(0);\n    var right = e.outputBuffer.getChannelData(1);\n    var size = left.length;\n\n    // We're going to buffer underrun. Attempt to fill the buffer.\n    if (this.buffer.size() < size * 2 && this.onBufferUnderrun) {\n      this.onBufferUnderrun(this.buffer.size(), size * 2);\n    }\n\n    try {\n      var samples = this.buffer.deqN(size * 2);\n    } catch (e) {\n      // onBufferUnderrun failed to fill the buffer, so handle a real buffer\n      // underrun\n\n      // ignore empty buffers... assume audio has just stopped\n      var bufferSize = this.buffer.size() / 2;\n      if (bufferSize > 0) {\n        console.log(`Buffer underrun (needed ${size}, got ${bufferSize})`);\n      }\n      for (var j = 0; j < size; j++) {\n        left[j] = 0;\n        right[j] = 0;\n      }\n      return;\n    }\n    for (var i = 0; i < size; i++) {\n      left[i] = samples[i * 2];\n      right[i] = samples[i * 2 + 1];\n    }\n  };\n}\n","import Raven from \"raven-js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NES } from \"jsnes\";\n\nimport FrameTimer from \"./FrameTimer\";\nimport GamepadController from \"./GamepadController\";\nimport KeyboardController from \"./KeyboardController\";\nimport Screen from \"./Screen\";\nimport Speakers from \"./Speakers\";\n\n/*\n * Runs the emulator.\n *\n * The only UI is a canvas element. It assumes it is a singleton in various ways\n * (binds to window, keyboard, speakers, etc).\n */\nclass Emulator extends Component {\n  render() {\n    return (\n      <Screen\n        ref={screen => {\n          this.screen = screen;\n        }}\n        onGenerateFrame={() => {\n          this.nes.frame();\n        }}\n        onMouseDown={(x, y) => {\n          this.nes.zapperMove(x, y);\n          this.nes.zapperFireDown();\n        }}\n        onMouseUp={() => {\n          this.nes.zapperFireUp();\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    // Initial layout\n    this.fitInParent();\n\n    this.speakers = new Speakers({\n      onBufferUnderrun: (actualSize, desiredSize) => {\n        if (this.props.paused) {\n          return;\n        }\n        // Skip a video frame so audio remains consistent. This happens for\n        // a variety of reasons:\n        // - Frame rate is not quite 60fps, so sometimes buffer empties\n        // - Page is not visible, so requestAnimationFrame doesn't get fired.\n        //   In this case emulator still runs at full speed, but timing is\n        //   done by audio instead of requestAnimationFrame.\n        // - System can't run emulator at full speed. In this case it'll stop\n        //    firing requestAnimationFrame.\n        console.log(\n          \"Buffer underrun, running another frame to try and catch up\"\n        );\n\n        this.frameTimer.generateFrame();\n        // desiredSize will be 2048, and the NES produces 1468 samples on each\n        // frame so we might need a second frame to be run. Give up after that\n        // though -- the system is not catching up\n        if (this.speakers.buffer.size() < desiredSize) {\n          console.log(\"Still buffer underrun, running a second frame\");\n          this.frameTimer.generateFrame();\n        }\n      }\n    });\n\n    this.nes = new NES({\n      onFrame: this.screen.setBuffer,\n      onStatusUpdate: console.log,\n      onAudioSample: this.speakers.writeSample,\n      sampleRate: this.speakers.getSampleRate()\n    });\n\n    // For debugging. ([\"nes\"] instead of .nes to avoid VS Code type errors.)\n    window[\"nes\"] = this.nes;\n\n    this.frameTimer = new FrameTimer({\n      onGenerateFrame: Raven.wrap(this.nes.frame),\n      onWriteFrame: Raven.wrap(this.screen.writeBuffer)\n    });\n\n    // Set up gamepad and keyboard\n    this.gamepadController = new GamepadController({\n      onButtonDown: this.nes.buttonDown,\n      onButtonUp: this.nes.buttonUp\n    });\n\n    this.gamepadController.loadGamepadConfig();\n    this.gamepadPolling = this.gamepadController.startPolling();\n\n    this.keyboardController = new KeyboardController({\n      onButtonDown: this.gamepadController.disableIfGamepadEnabled(\n        this.nes.buttonDown\n      ),\n      onButtonUp: this.gamepadController.disableIfGamepadEnabled(\n        this.nes.buttonUp\n      )\n    });\n\n    // Load keys from localStorage (if they exist)\n    this.keyboardController.loadKeys();\n\n    document.addEventListener(\"keydown\", this.keyboardController.handleKeyDown);\n    document.addEventListener(\"keyup\", this.keyboardController.handleKeyUp);\n    document.addEventListener(\n      \"keypress\",\n      this.keyboardController.handleKeyPress\n    );\n\n    this.nes.loadROM(this.props.romData);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n\n    // Unbind keyboard\n    document.removeEventListener(\n      \"keydown\",\n      this.keyboardController.handleKeyDown\n    );\n    document.removeEventListener(\"keyup\", this.keyboardController.handleKeyUp);\n    document.removeEventListener(\n      \"keypress\",\n      this.keyboardController.handleKeyPress\n    );\n\n    // Stop gamepad\n    this.gamepadPolling.stop();\n\n    window[\"nes\"] = undefined;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.paused !== prevProps.paused) {\n      if (this.props.paused) {\n        this.stop();\n      } else {\n        this.start();\n      }\n    }\n\n    // TODO: handle changing romData\n  }\n\n  start = () => {\n    this.frameTimer.start();\n    this.speakers.start();\n    this.fpsInterval = setInterval(() => {\n      console.log(`FPS: ${this.nes.getFPS()}`);\n    }, 1000);\n  };\n\n  stop = () => {\n    this.frameTimer.stop();\n    this.speakers.stop();\n    clearInterval(this.fpsInterval);\n  };\n\n  /*\n   * Fill parent element with screen. Typically called if parent element changes size.\n   */\n  fitInParent() {\n    this.screen.fitInParent();\n  }\n}\n\nEmulator.propTypes = {\n  paused: PropTypes.bool,\n  romData: PropTypes.string.isRequired\n};\n\nexport default Emulator;\n","import React, { Component } from \"react\";\nimport { Button, Progress } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport config from \"./config\";\nimport ControlsModal from \"./ControlsModal\";\nimport Emulator from \"./Emulator\";\nimport RomLibrary from \"./RomLibrary\";\nimport { loadBinary } from \"./utils\";\n\nimport \"./RunPage.css\";\n\n/*\n * The UI for the emulator. Also responsible for loading ROM from URL or file.\n */\nclass RunPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      romName: null,\n      romData: null,\n      running: false,\n      paused: false,\n      controlsModalOpen: false,\n      loading: true,\n      loadedPercent: 3,\n      error: null\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"RunPage\">\n        <nav\n          className=\"navbar navbar-expand\"\n          ref={el => {\n            this.navbar = el;\n          }}\n        >\n          <ul className=\"navbar-nav\" style={{ width: \"200px\" }}>\n            <li className=\"navitem\">\n              <Link to=\"/\" className=\"nav-link\">\n                &lsaquo; Back\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto mr-auto\">\n            <li className=\"navitem\">\n              <span className=\"navbar-text mr-3\">{this.state.romName}</span>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav\" style={{ width: \"200px\" }}>\n            <li className=\"navitem\">\n              <Button\n                outline\n                color=\"primary\"\n                onClick={this.toggleControlsModal}\n                className=\"mr-3\"\n              >\n                Controls\n              </Button>\n              <Button\n                outline\n                color=\"primary\"\n                onClick={this.handlePauseResume}\n                disabled={!this.state.running}\n              >\n                {this.state.paused ? \"Resume\" : \"Pause\"}\n              </Button>\n            </li>\n          </ul>\n        </nav>\n\n        {this.state.error ? (\n          this.state.error\n        ) : (\n          <div\n            className=\"screen-container\"\n            ref={el => {\n              this.screenContainer = el;\n            }}\n          >\n            {this.state.loading ? (\n              <Progress\n                value={this.state.loadedPercent}\n                style={{\n                  position: \"absolute\",\n                  width: \"70%\",\n                  left: \"15%\",\n                  top: \"48%\"\n                }}\n              />\n            ) : this.state.romData ? (\n              <Emulator\n                romData={this.state.romData}\n                paused={this.state.paused}\n                ref={emulator => {\n                  this.emulator = emulator;\n                }}\n              />\n            ) : null}\n\n            {/* TODO: lift keyboard and gamepad state up */}\n            {this.state.controlsModalOpen && (\n              <ControlsModal\n                isOpen={this.state.controlsModalOpen}\n                toggle={this.toggleControlsModal}\n                keys={this.emulator.keyboardController.keys}\n                setKeys={this.emulator.keyboardController.setKeys}\n                promptButton={this.emulator.gamepadController.promptButton}\n                gamepadConfig={this.emulator.gamepadController.gamepadConfig}\n                setGamepadConfig={\n                  this.emulator.gamepadController.setGamepadConfig\n                }\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.layout);\n    this.layout();\n    this.load();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.layout);\n    if (this.currentRequest) {\n      this.currentRequest.abort();\n    }\n  }\n\n  load = () => {\n    if (this.props.match.params.slug) {\n      const slug = this.props.match.params.slug;\n      const isLocalROM = /^local-/.test(slug);\n      const romHash = slug.split(\"-\")[1];\n      const romInfo = isLocalROM\n        ? RomLibrary.getRomInfoByHash(romHash)\n        : config.ROMS[slug];\n\n      if (!romInfo) {\n        this.setState({ error: `No such ROM: ${slug}` });\n        return;\n      }\n\n      if (isLocalROM) {\n        this.setState({ romName: romInfo.name });\n        const localROMData = localStorage.getItem(\"blob-\" + romHash);\n        this.handleLoaded(localROMData);\n      } else {\n        this.setState({ romName: romInfo.description });\n        this.currentRequest = loadBinary(\n          romInfo.url,\n          (err, data) => {\n            if (err) {\n              this.setState({ error: `Error loading ROM: ${err.message}` });\n            } else {\n              this.handleLoaded(data);\n            }\n          },\n          this.handleProgress\n        );\n      }\n    } else if (this.props.location.state && this.props.location.state.file) {\n      let reader = new FileReader();\n      reader.readAsBinaryString(this.props.location.state.file);\n      reader.onload = e => {\n        this.currentRequest = null;\n        this.handleLoaded(reader.result);\n      };\n    } else {\n      this.setState({ error: \"No ROM provided\" });\n    }\n  };\n\n  handleProgress = e => {\n    if (e.lengthComputable) {\n      this.setState({ loadedPercent: (e.loaded / e.total) * 100 });\n    }\n  };\n\n  handleLoaded = data => {\n    this.setState({ running: true, loading: false, romData: data });\n  };\n\n  handlePauseResume = () => {\n    this.setState({ paused: !this.state.paused });\n  };\n\n  layout = () => {\n    let navbarHeight = parseFloat(window.getComputedStyle(this.navbar).height);\n    this.screenContainer.style.height = `${window.innerHeight -\n      navbarHeight}px`;\n    if (this.emulator) {\n      this.emulator.fitInParent();\n    }\n  };\n\n  toggleControlsModal = () => {\n    this.setState({ controlsModalOpen: !this.state.controlsModalOpen });\n  };\n}\n\nexport default RunPage;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ListPage from \"./ListPage\";\nimport RunPage from \"./RunPage\";\nimport config from \"./config\";\nimport { handleError } from \"./utils\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n    if (config.GOOGLE_ANALYTICS_CODE) {\n      GoogleAnalytics.initialize(config.GOOGLE_ANALYTICS_CODE);\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"container my-4\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              Oops - there has been an error. It has been logged to the console.\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <BrowserRouter basename={config.BASENAME}>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={ListPage} />\n          <Route exact path=\"/run\" component={RunPage} />\n          <Route exact path=\"/run/:slug\" component={RunPage} />\n          <Route path=\"/\" render={this.recordPageview} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error });\n    handleError(error, errorInfo);\n  }\n\n  recordPageview = ({ location }) => {\n    GoogleAnalytics.pageview(location.pathname);\n    return null;\n  };\n}\n\nexport default App;\n","import Raven from \"raven-js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport config from \"./config\";\nimport \"./index.scss\";\n\nif (config.SENTRY_URI) {\n  Raven.config(config.SENTRY_URI).install();\n}\n\nRaven.context(function() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n});\n"],"sourceRoot":""}